{
  "openapi": "3.0.0",
  "info": {
    "description": "This is a documentation for the Qurba backend API, please, note that not all apis are implemented and tested, however there is some trouble sending data in body or queries",
    "version": "1.0.0",
    "title": "Tasks API",
    "contact": {
      "email": "ahmedhanyhasn@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:8080",
  "paths": {
    "/api/rest/create/rest": {
      "post": {
        "summary": "creates new restaurant {for some reason req.body is sent empty need more time to debug}, use postman with same api and schema",
        "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "restaurant object",
            "schema": {
                "type": "object",
                "properties":{
                    "data":{
                        "type":"object",
                        "$ref": "#/definitions/Restaurant"

                    }
                }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/api/rest/insert/rests": {
      "post": {
        "summary": "Creates many users at once {for some reason req.body is sent empty need more time to debug}, use postman with same api and schema",
        "consumes": [
            "application/json"
          ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "array of restaurant objects",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Restaurant"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/api/rest/update/{id}": {
      "put": {
        "summary": "Update a restaurant using id{for some reason req.body is sent empty need more time to debug}\n please use postman with same api and schema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "take id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Restaurant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/api/rest/get/all": {
      "get": {
        "summary": "read all restaurantsUpdate a restaurant using id{for some reason req.body is sent empty need more time to debug}\n please use postman with same api and schema",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
            
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    
  },
    "/api/rest/get/{id}": {
      "get": {
        "summary": "read restaurant with specific id",
        "produces": ["application/json"],
        "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "take id that needs to be read",

              "type": "string"
            }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
            
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
    }, 
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "object",

          "properties": {
            "firstName": {
              "type": "string",
              "nullable": false,
              "description": "user's first name"
            },
            "lastName": {
              "type": "string",
              "nullable": false,
              "description": "user's last name"
            }
          },
          "description": "user's full name"
        },
        "favCuisines": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "user's favorite cuisines"
        },
        "managedRests": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "id strings of the restaurants the user manage"
        }
      },
      "example": {
        "fullName": {
          "firstName": "ahmed",
          "lastName": "hany"
        },
        "favCuisines": ["burger", "pizza"],
        "managedRests": ["624fecd3e88b5fcf98429089", "62507853cdd7f93668f1a193"]
      }
    },
    "Restaurant": {
      "type": "object",
      "properties": {
        "restName": {
          "type": "string",
          "minimum": 1,
          "maximum": 50
        },
        "cuisine": {
          "type": "string"

        },
        "long": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "lat": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      },
      "example": {
        "restName": "pizza queen",
        "cuisine": "pizza",
        "long": 107.385,
        "lat": 3.62
      }
    }
  }
}
